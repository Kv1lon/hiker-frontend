{"ast":null,"code":"import { useToast } from \"vue-toastification\";\nexport default {\n  name: \"login\",\n  data: () => ({\n    email: '',\n    password: '',\n    backend: \"s\",\n    toast: useToast()\n  }),\n  created() {\n    this.backend = this.$store.state.backendUrl + `auth/token/login/`;\n  },\n  methods: {\n    async login() {\n      let email = this.email;\n      let password = this.password;\n      await this.$store.dispatch('login', {\n        email,\n        password\n      }).catch(err => {\n        console.log(err), this.toast.error(\"Ви неправильно ввели електронну пошту або пароль\");\n      });\n      var token = this.$store.state.access;\n      await this.$store.dispatch('set_user', token).then(() => {\n        let r = this.$router.resolve({\n          name: 'home' // put your route information in\n        });\n\n        window.location.assign(r.href);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["useToast","name","data","email","password","backend","toast","created","$store","state","backendUrl","methods","login","dispatch","catch","err","console","log","error","token","access","then","r","$router","resolve","window","location","assign","href"],"sources":["/home/oliverqa/Documents/hiker-frontend/src/views/Login.vue"],"sourcesContent":["<template>\n\t<div class=\"page-content\">\n\t\t<div data-aos=\"flip-up\" data-aos-delay=\"100\" data-aos-duration=\"1000\" class=\"form-v5-content\">\n\t\t\t<form class=\"form-detail\" @submit.prevent=\"login\">\n\t\t\t\t<h2>Вхід</h2>\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<label for=\"full-name\">Email</label>\n\t\t\t\t\t<input type=\"text\" v-model=\"email\" name=\"full-name\" id=\"full-name\" class=\"input-text\" placeholder=\"Імя користувача\" required>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<label for=\"password\">Пароль</label>\n\t\t\t\t\t<input type=\"password\"  v-model=\"password\" name=\"password\" id=\"password\" class=\"input-text\" placeholder=\"Пароль\" required>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row-last\">\n\t\t\t\t\t<input type=\"submit\" name=\"register\" class=\"register\" value=\"Вход\">\n\t\t\t\t</div>\n\t\t\t</form>\n\n\t\t</div>\n\t</div>\n</template>\n<script>\n\n\timport  {useToast} from \"vue-toastification\";\n\n  export default {\n\t\tname: \"login\",\n\t\tdata: () => ({\n\t\t\temail:'',\n\t\t\tpassword:'',\n\t\t\tbackend:  \"s\",\n\t\t\ttoast : useToast()\n\t\t}),\ncreated() {\n      this.backend=  this.$store.state.backendUrl+`auth/token/login/`\n},\n\t  methods: {\n\n\t\t\tasync login() {\n\t\t\t\tlet email = this.email\n\t\t\t\tlet password = this.password\n\t\t\t\t await this.$store.dispatch('login', { email, password })\n\n\t\t\t\t\t\t.catch(err => {console.log(err), this.toast.error(\"Ви неправильно ввели електронну пошту або пароль\")})\n\t\t\t\tvar token =  this.$store.state.access\n\t\t\t\t\t\t\t\t await this.$store.dispatch('set_user',  token)\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tlet r = this.$router.resolve({\n\t\t\t\t\t\t\t\tname: 'home', // put your route information in\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\twindow.location.assign(r.href)})\n\t\t\t\t\t\t.catch(err => {console.log(err)})\n\t\t\t},\n\n\n\t\t}}\n</script>\n"],"mappings":"AAwBC,SAASA,QAAQ,QAAO,oBAAoB;AAE3C,eAAe;EACfC,IAAI,EAAE,OAAO;EACbC,IAAI,EAAEA,CAAA,MAAO;IACZC,KAAK,EAAC,EAAE;IACRC,QAAQ,EAAC,EAAE;IACXC,OAAO,EAAG,GAAG;IACbC,KAAI,EAAIN,QAAQ,CAAC;EAClB,CAAC,CAAC;EACJO,OAAOA,CAAA,EAAG;IACJ,IAAI,CAACF,OAAO,GAAG,IAAI,CAACG,MAAM,CAACC,KAAK,CAACC,UAAU,GAAE,mBAAiB;EACpE,CAAC;EACEC,OAAO,EAAE;IAET,MAAMC,KAAKA,CAAA,EAAG;MACb,IAAIT,KAAI,GAAI,IAAI,CAACA,KAAI;MACrB,IAAIC,QAAO,GAAI,IAAI,CAACA,QAAO;MAC1B,MAAM,IAAI,CAACI,MAAM,CAACK,QAAQ,CAAC,OAAO,EAAE;QAAEV,KAAK;QAAEC;MAAS,CAAC,EAErDU,KAAK,CAACC,GAAE,IAAK;QAACC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,EAAE,IAAI,CAACT,KAAK,CAACY,KAAK,CAAC,kDAAkD,CAAC;MAAA,CAAC;MACxG,IAAIC,KAAI,GAAK,IAAI,CAACX,MAAM,CAACC,KAAK,CAACW,MAAK;MAC/B,MAAM,IAAI,CAACZ,MAAM,CAACK,QAAQ,CAAC,UAAU,EAAGM,KAAK,EAC/CE,IAAI,CAAC,MAAM;QACX,IAAIC,CAAA,GAAI,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC;UAC5BvB,IAAI,EAAE,MAAM,CAAE;QACf,CAAC;;QACDwB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACL,CAAC,CAACM,IAAI,CAAC;MAAA,CAAC,EAC/Bd,KAAK,CAACC,GAAE,IAAK;QAACC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAAA,CAAC;IACnC;EAGD;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}