{"ast":null,"code":"import { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport Multiselect from \"@vueform/multiselect\";\nimport VueNumberInput from \"@chenfengyuan/vue-number-input\";\nimport { useToast } from \"vue-toastification\";\nimport f from \"./airport.csv\";\nimport md from \"./flightsearch.md\";\nimport axios from \"axios\";\nexport default {\n  props: ['slug'],\n  name: \"ticket_single\",\n  inheritAttrs: false,\n  emits: ['confirm', 'cancel'],\n  components: {\n    'font-awesome-icon': FontAwesomeIcon,\n    Multiselect,\n    VueNumberInput\n  },\n  data: () => ({\n    listPosts: [],\n    popular: [],\n    user: {},\n    total: 0,\n    date: \"\",\n    adult: 1,\n    teen: 0,\n    baby: 0,\n    forward: '',\n    back: '',\n    reqs: [],\n    tickets_i: {\n      it: 0,\n      fl: 0,\n      tr: 0\n    },\n    trip_class: '',\n    timezone: \"UTC\",\n    traveler_id: 1,\n    modelConfig: {\n      type: 'string',\n      mask: 'YYYY-MM-DD hh:mm:ss',\n      timeAdjust: '24:00:00'\n    },\n    show: false,\n    orl: \"\",\n    del: \"\",\n    op: {},\n    arar: {},\n    ticket: {},\n    travalerType: {\n      \"ADULT\": \"Дорослий\",\n      \"CHILD\": \"Дитина\",\n      \"SENIOR\": \"Поважного віку\",\n      \"YOUNG\": \"Молодий\",\n      \"HELD_INFANT\": \"Немовля\",\n      \"SEATED_INFANT\": \"Сидяче немовля\",\n      \"STUDENT\": \"Ученик\"\n    },\n    fareType: {\n      \"STANDARD\": \"Стандарт\",\n      \"INCLUSIVE_TOUR\": \"Інклюзивний тур\",\n      \"ADULT_WITH_COMPANION\": \"Дорослий із супутником\",\n      \"COMPANION\": \"Супутник\"\n    },\n    travelers_info: [],\n    toast: useToast(),\n    loading: false\n  }),\n  created() {\n    this.loading = true;\n    this.loadTicket();\n    this.loadPopularPosts();\n    this.user = this.$store.state.cuser;\n    var data_airports = this.loadCsv(f);\n    this.arar, this.op = data_airports;\n  },\n  mounted() {\n    console.log(this.$store.state);\n  },\n  methods: {\n    loadCsv(allText) {\n      var ops = [];\n      var mdd = md.join(\"\");\n      for (var i = 1; i < allText.length; i++) {\n        if (mdd.includes(allText[i][0])) {\n          var st = \"\";\n          for (var j = 0; j < allText[i].length - 2; j++) {\n            st += allText[i][j] + \" \";\n          }\n          allText[i].push(st);\n          ops.push(st);\n        }\n      }\n      allText.shift();\n      return allText, ops;\n    },\n    async loadPopularPosts() {\n      await axios({\n        url: this.$store.state.backendUrl + `api/v1/blog?limit=3&search=&date=month&ordering=descending`,\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      }).then(response => {\n        this.popular = response.data.results;\n      });\n    },\n    async loadTicket() {\n      var data = \"grant_type=client_credentials&client_id=JxlnVpGLZUn7fV3UPNYfT2IJc0lL1GbE&client_secret=t965p0PRI1cCBS9h\";\n      var token;\n      var access = localStorage.getItem('access');\n      if (access) {\n        delete axios.defaults.headers.common[\"Authorization\"];\n      }\n      await axios({\n        url: 'https://test.api.amadeus.com/v1/security/oauth2/token',\n        data: data,\n        method: 'POST',\n        headers: {\n          \"Content-type\": \"application/x-www-form-urlencoded\"\n        }\n      }).then(response => {\n        token = response.data.token_type + \" \" + response.data.access_token;\n      });\n      var id;\n      var url = `${this.$store.getters.getServerUrl}api/v1/ticket/${this.slug}`;\n      await axios({\n        url: url,\n        method: 'GET',\n        headers: {\n          \"Authorization\": \"JWT \" + localStorage.getItem('access')\n        }\n      }).then(response => {\n        id = response.data.text_id, console.log(response);\n      });\n      await axios({\n        url: `https://test.api.amadeus.com/v1/booking/flight-orders/${id}`,\n        method: 'GET',\n        headers: {\n          \"Authorization\": token\n        }\n      }).then(response => {\n        this.ticket = response.data.data, this.loading = false;\n        console.log(response);\n      });\n    },\n    async searchTickets() {\n      var data = \"grant_type=client_credentials&client_id=JxlnVpGLZUn7fV3UPNYfT2IJc0lL1GbE&client_secret=t965p0PRI1cCBS9h\";\n      var token;\n      var access = localStorage.getItem('access');\n      if (access) {\n        delete axios.defaults.headers.common[\"Authorization\"];\n      }\n      this.loading = true;\n      await axios({\n        url: 'https://test.api.amadeus.com/v1/security/oauth2/token',\n        data: data,\n        method: 'POST',\n        headers: {\n          \"Content-type\": \"application/x-www-form-urlencoded\"\n        }\n      }).then(response => {\n        console.log(response), token = response.data.token_type + \" \" + response.data.access_token;\n      });\n      this.orl = this.orl.slice(0, 3);\n      this.del = this.del.slice(0, 3);\n      var date = this.forward.toString().slice(10);\n      var data1 = {\n        \"id\": 1,\n        \"originLocationCode\": this.orl,\n        \"destinationLocationCode\": this.del,\n        \"departureDateTimeRange\": {\n          \"date\": this.forward.slice(0, 10),\n          \"time\": this.forward.slice(11)\n        }\n      };\n      if (this.back[0]) {\n        var data2 = {\n          \"id\": 2,\n          \"originLocationCode\": this.del,\n          \"destinationLocationCode\": this.orl,\n          \"departureDateTimeRange\": {\n            \"date\": this.back.slice(0, 10),\n            \"time\": this.back.slice(11)\n          }\n        };\n        var dd = [data1, data2];\n      } else {\n        var dd = [data1];\n      }\n      var travelers = [];\n      var c = 0;\n      for (var i = 0; i < this.adult; i++) {\n        c++;\n        travelers.push({\n          \"id\": c,\n          \"travelerType\": \"ADULT\"\n        });\n      }\n      for (var i = 0; i < this.teen; i++) {\n        c++;\n        travelers.push({\n          \"id\": c,\n          \"travelerType\": \"CHILD\"\n        });\n      }\n      for (var i = 0; i < this.baby; i++) {\n        c++;\n        if (i < this.adult) {\n          travelers.push({\n            \"id\": c,\n            \"travelerType\": \"HELD_INFANT\",\n            \"associatedAdultId\": i + 1\n          });\n        }\n      }\n      var cabin = \"\";\n      if (this.trip_class === \"E\") {\n        cabin = \"ECONOMY\";\n      } else if (this.trip_class === \"PE\") {\n        cabin = \"PREMIUM_ECONOMY\";\n      } else if (this.trip_class === \"B\") {\n        cabin = \"BUSINESS\";\n      } else if (this.trip_class === \"F\") {\n        cabin = \"FIRST\";\n      }\n      var d = {\n        \"currencyCode\": \"USD\",\n        \"originDestinations\": dd,\n        \"travelers\": travelers,\n        \"sources\": [\"GDS\"],\n        \"searchCriteria\": {\n          \"maxFlightOffers\": 20,\n          \"flightFilters\": {\n            \"cabinRestrictions\": [{\n              \"cabin\": cabin,\n              \"coverage\": \"MOST_SEGMENTS\",\n              \"originDestinationIds\": [\"1\"]\n            }],\n            \"carrierRestrictions\": {\n              \"excludedCarrierCodes\": [\"AA\", \"TP\", \"AZ\"]\n            }\n          }\n        }\n      };\n      var that = this;\n      await axios({\n        url: 'https://test.api.amadeus.com/v2/shopping/flight-offers',\n        data: d,\n        method: 'POST',\n        headers: {\n          \"Authorization\": token\n        }\n      }).then(res => {\n        if (res.data.data[0]) {\n          data = res.data.data;\n          this.loading = false, data = res.data.data, console.log(this.$store.state);\n          this.$store.dispatch('tickets_arr', {\n            data\n          }), this.goTo(\"tickets\");\n        } else {\n          that.toast.error(\"Немає білетів\"), this.loading = false;\n        }\n      }).catch(err => {\n        console.log(err), that.toast.error(\"Введіть валідні данні або спробуйте пізніше\"), this.loading = false;\n      });\n      console.log(this.$store.state.tickets);\n      access = localStorage.getItem('access');\n      if (access) {\n        axios.defaults.headers.common['Authorization'] = \"JWT \" + access;\n      }\n    },\n    goTo(name, params) {\n      let r = this.$router.resolve({\n        name: name,\n        params: params // put your route information in\n      });\n\n      window.location.assign(r.href);\n    },\n    format_date(data) {\n      if (data.includes(\"-\")) {\n        return data.slice(0, 10).replaceAll(\"-\", \".\") + \" \" + data.slice(11, 16);\n      } else if (data.includes(\"P\")) {\n        return data.replaceAll(\"P\", \"\").replaceAll(\"T\", \"\").replaceAll(\"D\", \" день(днів) \").replaceAll(\"H\", \" год. \").replaceAll(\"M\", \" хвилин(а) \");\n      }\n    },\n    next_flight(ticket) {\n      if (this.tickets_i['fl'] < ticket.flightOffers[0].itineraries[this.tickets_i['it']].segments.length - 1) {\n        this.tickets_i['fl']++;\n      } else if (this.tickets_i['fl'] >= ticket.itineraries[this.tickets_i['it']].segments.length - 1 && this.tickets_i['it'] < ticket.itineraries.length - 1) {\n        this.tickets_i['it']++;\n        this.tickets_i['fl'] = 0;\n      }\n    },\n    prev_flight(ticket) {\n      if (this.tickets_i['fl'] > 0) {\n        this.tickets_i['fl']--;\n      } else if (this.tickets_i['fl'] === 0 && this.tickets_i['it'] > 0) {\n        this.tickets_i['it']--;\n        this.tickets_i['fl'] = ticket.itineraries[this.tickets_i['it']].segments.length - 1;\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}