{"ast":null,"code":"import axios from \"axios\";\nimport Multiselect from \"@vueform/multiselect\";\nimport { useToast } from \"vue-toastification\";\nexport default {\n  name: \"registration\",\n  components: {\n    Multiselect\n  },\n  data: () => ({\n    user: {},\n    username: '',\n    password: '',\n    email: '',\n    bio: '',\n    city: '',\n    cities: [],\n    opt_cities: [],\n    region: '',\n    regions: [],\n    opt_regions: [],\n    msg: [],\n    loading: false,\n    toast: useToast()\n  }),\n  created() {\n    this.loadListCountries();\n    this.loadListRegions();\n  },\n  watch: {\n    email(value) {\n      // binding this to the data value in the email input\n      this.email = value;\n      this.validateEmail(value);\n    },\n    password(value) {\n      this.password = value;\n      this.validatePassword(value);\n    }\n  },\n  methods: {\n    register: function () {\n      const formData = new FormData();\n      if (this.city) {\n        var city = this.cities.find(x => x.title === this.city).slug;\n        formData.append(\"city\", city);\n      }\n      if (this.region) {\n        var region = this.regions.find(x => x.title === this.region).slug;\n        formData.append(\"region\", region);\n      }\n      formData.append(\"username\", this.username);\n      formData.append(\"email\", this.email);\n      formData.append(\"password\", this.password);\n      formData.append(\"bio\", this.bio);\n      this.loading = true;\n      this.$store.dispatch('register', formData).then(() => {\n        this.loading = false;\n        this.toast.success('На Вашу пошту був відправлен лист з підтвердженням');\n        this.$router.push('/');\n      }).catch(err => {\n        this.loading = false, console.log(err), this.toast.error('Схоже відбулась помилка, можливо користувач з таким імям вже існує (' + err + ')');\n      });\n    },\n    async loadListCountries() {\n      axios({\n        url: this.$store.state.backendUrl + `api/v1/city?limit=100&search=`,\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      }).then(response => {\n        this.cities = response.data;\n        for (var el in response.data) {\n          this.opt_cities.push(response.data[el].title);\n        }\n      });\n    },\n    async loadListRegions() {\n      axios({\n        url: this.$store.state.backendUrl + `api/v1/regions`,\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      }).then(response => {\n        this.regions = response.data;\n        for (var el in response.data) {\n          this.opt_regions.push(response.data[el].title);\n        }\n      });\n    },\n    async loadPopularPosts() {\n      axios({\n        url: this.$store.state.backendUrl + `api/v1/blog?limit=3&search=&date=month&popular=descending`,\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      }).then(response => {\n        this.popular = response.data.results;\n      });\n    },\n    validateEmail(value) {\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)) {\n        this.msg['email'] = '';\n      } else {\n        this.msg['email'] = 'Це не схоже на email';\n      }\n    },\n    validatePassword(value) {\n      let difference = 8 - value.length;\n      if (value.length < 8) {\n        this.msg['password'] = 'Повинно бути 8 символів! ' + difference + ' залишилось символів';\n      } else {\n        this.msg['password'] = '';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","Multiselect","useToast","name","components","data","user","username","password","email","bio","city","cities","opt_cities","region","regions","opt_regions","msg","loading","toast","created","loadListCountries","loadListRegions","watch","value","validateEmail","validatePassword","methods","register","formData","FormData","find","x","title","slug","append","$store","dispatch","then","success","$router","push","catch","err","console","log","error","url","state","backendUrl","method","headers","response","el","loadPopularPosts","popular","results","test","difference","length"],"sources":["/home/oliverqa/Documents/hiker-frontend/src/views/registration.vue"],"sourcesContent":["<template>\n    <div v-if=\"loading\" class=\"preloader\">\n    <div class=\"preloader__image\">\n    </div>\n</div>\n    <div class=\"page-content\">\n        <div data-aos=\"flip-up\" data-aos-delay=\"100\"  data-aos-duration=\"1000\" class=\"form-v5-content\">\n            <form class=\"form-detail\" @submit.prevent=\"register\">\n                <h2>Реєстрація</h2>\n                <div class=\"form-row\">\n                    <label for=\"full-name\">Імя користувача</label>\n                    <input type=\"text\" v-model=\"username\" name=\"full-name\" id=\"full-name\" class=\"input-text\" placeholder=\"Імя користувача\" required>\n                </div>\n                <div class=\"form-row\">\n                    <label for=\"your-email\">Пошта</label>\n                    <input readonly    onfocus=\"this.removeAttribute('readonly')\" type=\"email\" v-model=\"email\" name=\"your-email\" id=\"your-email\" class=\"input-text\" placeholder=\"Email\" required pattern=\"[^@]+@[^@]+.[a-zA-Z]{2,6}\">\n                    <div v-if=\"msg.email\" style=\"color: #d58512;font-weight: bold\">{{msg.email}}</div>\n                </div>\n                <div class=\"form-row\">\n                    <label for=\"bio\">Коротко про собе</label>\n                    <input type=\"text\"  v-model=\"bio\" name=\"bio\" id=\"bio\" class=\"input-text\" placeholder=\"Біо\" required>\n                </div>\n                <div class=\"form-row\">\n                    <label for=\"password\">Місто</label>\n                    <div class=\"input-text\">\n                        <Multiselect  :searchable=\"true\" v-model=\"city\" :options=\"opt_cities\" ></Multiselect>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <label for=\"password\">Який відпочинок Ви любите?</label>\n                    <div class=\"input-text\">\n                        <Multiselect  :searchable=\"true\" v-model=\"region\" :options=\"opt_regions\" ></Multiselect>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <label for=\"password\">Пароль</label>\n                    <input type=\"password\" readonly    onfocus=\"this.removeAttribute('readonly')\"  v-model=\"password\" name=\"password\" id=\"password\" class=\"input-text\" placeholder=\"Пароль\" required>\n                    <div v-if=\"msg.password\" style=\"color: #d58512;font-weight: bold\">{{msg.password}}</div>\n                </div>\n                <div class=\"form-row-last\">\n                    <input v-if=\"msg['email'] || msg['password']||!password||!email||!username||!city||!region\" disabled type=\"submit\" name=\"register\" class=\"register btn btn-block\" value=\"Реєстрація\">\n                    <input v-else type=\"submit\" name=\"register\" class=\"register btn btn-block\" value=\"Реєстрація\">\n                </div>\n            </form>\n        </div>\n    </div>\n</template>\n\n<script>\n    import axios from \"axios\";\n    import Multiselect from \"@vueform/multiselect\";\n    import {useToast} from \"vue-toastification\";\n\n    export default {\n        name: \"registration\",\n        components:{Multiselect},\n        data: () => ({\n            user: {},\n            username:'',\n            password:'',\n            email:'',\n            bio:'',\n            city:'',\n            cities:[],\n            opt_cities:[],\n            region:'',\n            regions:[],\n            opt_regions:[],\n            msg:[],\n            loading:false,\n            toast : useToast()\n\n        }),\n        created() {\n        this.loadListCountries()\n        this.loadListRegions()\n        },\n        watch: {\n      email(value){\n        // binding this to the data value in the email input\n        this.email = value;\n        this.validateEmail(value);\n      },\n          password(value){\n      this.password = value;\n      this.validatePassword(value);\n    }\n    },\n        methods: {\n            register: function () {\n                const formData = new FormData();\n                if(this.city){\n                var city = this.cities.find(x=>x.title===this.city).slug\n                                formData.append(\"city\", city);}\n\n                if(this.region){\n                var region = this.regions.find(x=>x.title===this.region).slug\n                                formData.append(\"region\", region);\n\n                }\n                formData.append(\"username\", this.username);\n                formData.append(\"email\", this.email);\n                formData.append(\"password\", this.password);\n                formData.append(\"bio\", this.bio);\n                this.loading = true\n                this.$store.dispatch('register', formData)\n                    .then(() => {\n                      this.loading = false\n                      this.toast.success('На Вашу пошту був відправлен лист з підтвердженням')\n                      this.$router.push('/')\n                    })\n                    .catch(err => {                      this.loading = false, console.log(err), this.toast.error('Схоже відбулась помилка, можливо користувач з таким імям вже існує ('+err+')')})},\n\n\n            async loadListCountries() {\n                axios({url: this.$store.state.backendUrl+`api/v1/city?limit=100&search=`, method: 'GET',headers: {'Content-type': 'application/json',}}).then(response => {this.cities  = response.data\n                    for(var el in response.data){\n                        this.opt_cities.push(response.data[el].title)\n                    }\n                })\n            },\n            async loadListRegions() {\n                axios({url: this.$store.state.backendUrl+`api/v1/regions`, method: 'GET',headers: {'Content-type': 'application/json',}}).then(response => {this.regions  = response.data\n                    for(var el in response.data){\n                        this.opt_regions.push(response.data[el].title)\n                    }\n                })\n            },\n             async loadPopularPosts() {\n        axios({url: this.$store.state.backendUrl+`api/v1/blog?limit=3&search=&date=month&popular=descending`, method: 'GET',headers: {'Content-type': 'application/json',}}).then(response => {this.popular  = response.data.results})\n      },\nvalidateEmail(value){\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value))\n  {\n    this.msg['email'] = '';\n  } else{\n    this.msg['email'] = 'Це не схоже на email';\n  }\n    },\n      validatePassword(value){\n        let difference = 8 - value.length;\n        if (value.length<8) {\n          this.msg['password'] = 'Повинно бути 8 символів! '+ difference + ' залишилось символів' ;\n        } else {\n          this.msg['password'] = '';\n        }},\n        }\n    }\n</script>\n<style src=\"@vueform/multiselect/themes/default.css\"></style>\n\n<style scoped>\n  .preloader {\n    position: fixed;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    overflow: hidden;\n    background: #fff;\n    z-index: 1001;\n  }\n\n  .preloader__image {\n    position: relative;\n    top: 50%;\n    left: 50%;\n    width: 64px;\n    height: 64px;\n    margin-top: -32px;\n    margin-left: -32px;\n    background: url('../assets/Walk.gif') no-repeat 50% 50%;\n    /*расположение (url) изображения gif и др. параметры*/\n  }\n\n  .loaded_hiding .preloader {\n    transition: 0.3s opacity;\n    opacity: 0;\n  }\n\n  .loaded .preloader {\n    opacity: 50%;\n  }\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}