{"ast":null,"code":"import axios from \"axios\";\nimport { useToast } from \"vue-toastification\";\nexport default {\n  name: \"reset_password\",\n  props: ['uid', 'slug'],\n  data: () => ({\n    current_password: '',\n    new_password: '',\n    loading: false,\n    toast: useToast()\n  }),\n  methods: {\n    resetPassword() {\n      if (this.new_password === this.current_password) {\n        this.toast.error('Ноовий пароль не може співпадати зі старим');\n      } else {\n        const formData = new FormData();\n        formData.append(\"uid\", this.uid);\n        formData.append(\"token\", this.slug);\n        formData.append(\"new_password\", this.new_password);\n        formData.append(\"current_password\", this.current_password);\n        this.loading = true;\n        axios({\n          url: this.$store.state.backendUrl + `auth/users/set_password/`,\n          data: formData,\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }).then(response => {\n          console.log(response);\n        }).catch(err => {\n          this.toast.error('Ошибка');\n        });\n        const formData1 = new FormData();\n        formData1.append(\"uid\", this.uid);\n        formData1.append(\"token\", this.slug);\n        formData1.append(\"new_password\", this.new_password);\n        this.loading = true;\n        axios({\n          url: this.$store.state.backendUrl + `auth/users/reset_password_confirm/`,\n          data: formData1,\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }).then(response => {\n          console.log(response);\n          this.loading = false;\n          this.toast.success('Пароль змінено');\n          let r = this.$router.resolve({\n            name: 'home' // put your route information in\n          });\n\n          window.location.assign(r.href);\n        }).catch(err => {\n          this.toast.error('Помилка!');\n        });\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}