{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from 'axios';\nimport { useToast } from 'vue-toastification';\nexport default createStore({\n  state: {\n    backendUrl: \"http://0.0.0.0:8000/\",\n    status: '',\n    access: localStorage.getItem('access') || '',\n    refresh: localStorage.getItem('refresh') || '',\n    cuser: JSON.parse(localStorage.getItem('cuser')) || {},\n    tickets_arr: JSON.parse(localStorage.getItem('tickets_arr')) || [],\n    ticket: JSON.parse(localStorage.getItem('ticket')) || []\n  },\n  mutations: {\n    auth_request(state) {\n      state.status = 'loading';\n    },\n    auth_success(state, access, refresh) {\n      state.status = 'success';\n      state.access = access;\n      state.refresh = refresh;\n    },\n    auth_error(state) {\n      state.status = 'error';\n    },\n    logout(state) {\n      state.status = '';\n      state.access = '';\n      state.refresh = '';\n      state.cuser = {};\n    },\n    set_user(state, cuser) {\n      state.cuser = cuser;\n    },\n    tickets_arr(state, data) {\n      state.tickets_arr = data;\n    },\n    ticket(state, data) {\n      state.ticket = data;\n    }\n  },\n  actions: {\n    tickets_arr({\n      commit\n    }, data) {\n      commit('tickets_arr', data.data);\n      localStorage.setItem('tickets_arr', JSON.stringify(data.data));\n    },\n    ticket({\n      commit\n    }, data) {\n      commit('ticket', data.data);\n      localStorage.setItem('ticket', JSON.stringify(data.data));\n    },\n    login({\n      commit\n    }, user) {\n      return new Promise((resolve, reject) => {\n        commit('auth_request');\n        axios({\n          url: this.state.backendUrl + 'auth/jwt/create',\n          data: user,\n          method: 'POST'\n        }).then(resp => {\n          const access = resp.data.access;\n          const refresh = resp.data.refresh;\n          localStorage.setItem('access', access);\n          localStorage.setItem('refresh', refresh);\n          commit('auth_success', access, refresh);\n          resolve(resp);\n        }).catch(err => {\n          commit('auth_error');\n          localStorage.removeItem('access');\n          localStorage.removeItem('refresh');\n          localStorage.removeItem('cuser');\n          reject(err);\n        });\n      });\n    },\n    set_user({\n      commit\n    }, token) {\n      return new Promise((resolve, reject) => {\n        axios({\n          url: this.state.backendUrl + `auth/users/me/`,\n          method: 'GET',\n          headers: {\n            'Content-type': 'application/json',\n            'Authorization': `JWT ${token}`\n          }\n        }).then(response => {\n          const cuser = response.data;\n          localStorage.setItem('cuser', JSON.stringify(cuser));\n          commit('set_user', cuser);\n          resolve(response);\n        }).catch(err => {\n          commit('auth_error', err);\n          reject(err);\n        });\n      });\n    },\n    register({\n      commit\n    }, user) {\n      return new Promise((resolve, reject) => {\n        commit('auth_request');\n        axios({\n          url: this.state.backendUrl + 'auth/users/',\n          data: user,\n          method: 'POST'\n        }).then(resp => {\n          resolve(resp);\n        }).catch(err => {\n          commit('auth_error', err);\n          reject(err);\n        });\n      });\n    },\n    logout({\n      commit\n    }) {\n      return new Promise((resolve, reject) => {\n        commit('logout');\n        localStorage.removeItem('access');\n        localStorage.removeItem('refresh');\n        localStorage.removeItem('cuser');\n        resolve();\n      });\n    },\n    refresh({\n      commit\n    }, user) {\n      return new Promise((resolve, reject) => {\n        console.log(\"refresh!!!\" + this.state.cuser.username);\n        commit('auth_request');\n        axios({\n          url: this.state.backendUrl + 'auth/jwt/refresh/',\n          data: user,\n          method: 'POST'\n        }).then(resp => {\n          const access = resp.data.access;\n          const refresh = resp.data.refresh;\n          localStorage.setItem('access', access);\n          localStorage.setItem('refresh', refresh);\n          commit('auth_success', access, refresh);\n          resolve(resp);\n        }).catch(err => {\n          commit('auth_error');\n          localStorage.removeItem('access');\n          localStorage.removeItem('refresh');\n          localStorage.removeItem('cuser');\n          reject(err);\n        });\n      });\n    }\n  },\n  modules: {},\n  getters: {\n    getServerUrl: state => {\n      return state.backendUrl;\n    },\n    isLoggedIn: state => !!state.access,\n    authStatus: state => state.status\n  }\n});","map":{"version":3,"names":["createStore","axios","useToast","state","backendUrl","status","access","localStorage","getItem","refresh","cuser","JSON","parse","tickets_arr","ticket","mutations","auth_request","auth_success","auth_error","logout","set_user","data","actions","commit","setItem","stringify","login","user","Promise","resolve","reject","url","method","then","resp","catch","err","removeItem","token","headers","response","register","console","log","username","modules","getters","getServerUrl","isLoggedIn","authStatus"],"sources":["/home/oliverqa/Documents/hiker-frontend/src/store/index.js"],"sourcesContent":["import {createStore} from 'vuex'\nimport axios from 'axios'\nimport { useToast } from 'vue-toastification'\n\n\nexport default createStore({\nstate:{\n    backendUrl:\"http://0.0.0.0:8000/\",\n    status: '',\n    access: localStorage.getItem('access') || '',\n    refresh: localStorage.getItem('refresh') || '',\n    cuser:JSON.parse(localStorage.getItem('cuser')) || {},\n    tickets_arr:JSON.parse(localStorage.getItem('tickets_arr')) || [],\n    ticket:JSON.parse(localStorage.getItem('ticket')) || [],\n\n},\nmutations: {\n  auth_request(state){\n    state.status = 'loading'\n  },\n  auth_success(state, access, refresh){\n    state.status = 'success'\n    state.access = access\n          state.refresh = refresh\n\n  },\n  auth_error(state){\n    state.status = 'error'\n  },\n  logout(state){\n    state.status = ''\n    state.access = ''\n      state.refresh = ''\n      state.cuser = {}\n\n  },\nset_user(state,cuser){\n        state.cuser = cuser\n      },\n    tickets_arr(state,data){\n    state.tickets_arr = data\n    },\n    ticket(state,data){\n    state.ticket = data\n    }\n},\n    actions:{\n    tickets_arr({commit},data){\n            commit('tickets_arr',data.data)\nlocalStorage.setItem('tickets_arr', JSON.stringify(data.data)    )\n    },\n    ticket({commit},data){\n            commit('ticket',data.data)\nlocalStorage.setItem('ticket', JSON.stringify(data.data)    )\n    },\n        login({commit}, user){return new Promise((resolve, reject) => {\n            commit('auth_request')\n            axios({url: this.state.backendUrl+'auth/jwt/create', data: user, method: 'POST' })\n      .then(resp => {\n        const access = resp.data.access\n          const refresh =resp.data.refresh\n\n        localStorage.setItem('access', access)\n                  localStorage.setItem('refresh', refresh)\n        commit('auth_success', access,refresh)\n        resolve(resp)\n      })\n      .catch(err => {\n        commit('auth_error')\n        localStorage.removeItem('access')\n                  localStorage.removeItem('refresh')\n                  localStorage.removeItem('cuser')\n        reject(err)\n      })\n    })},\n        set_user({commit},token){\n              return new Promise((resolve, reject) => {\n                axios({url: this.state.backendUrl+`auth/users/me/`, method: 'GET', headers: {\n                            'Content-type': 'application/json',\n                            'Authorization':`JWT ${token}`\n\t\t\t\t\t}\n\t\t\t\t\t\t,}).then(response => {\n                    const cuser = response.data\n                    localStorage.setItem('cuser', JSON.stringify(cuser))\n                            commit('set_user', cuser)\n                    resolve(response)\n                })\n    .catch(err => {\n      commit('auth_error', err)\n      reject(err)\n  })\n })},\n register({commit}, user){\n  return new Promise((resolve, reject) => {\n    commit('auth_request')\n    axios({url: this.state.backendUrl+'auth/users/', data: user, method: 'POST' })\n    .then(resp => {\n      resolve(resp)\n    })\n    .catch(err => {\n      commit('auth_error', err)\n      reject(err)\n    })\n  })\n },\n     logout({commit}){\n  return new Promise((resolve, reject) => {\n    commit('logout')\n    localStorage.removeItem('access')\n          localStorage.removeItem('refresh')\n      localStorage.removeItem('cuser')\n    resolve()\n  })\n },\n        refresh({commit},user){\n    return new Promise((resolve, reject) => {\n        console.log(\"refresh!!!\"+this.state.cuser.username)\n      commit('auth_request')\n      axios({url: this.state.backendUrl+'auth/jwt/refresh/', data: user, method: 'POST' })\n      .then(resp => {\n        const access = resp.data.access\n          const refresh =resp.data.refresh\n\n\n        localStorage.setItem('access', access)\n                  localStorage.setItem('refresh', refresh)\n        commit('auth_success', access,refresh)\n        resolve(resp)\n      })\n      .catch(err => {\n        commit('auth_error')\n        localStorage.removeItem('access')\n                  localStorage.removeItem('refresh')\n                  localStorage.removeItem('cuser')\n        reject(err)\n      })\n    })},\n},\nmodules:{},\ngetters:{\n    getServerUrl:state=>{\n    return state.backendUrl\n    },\n  isLoggedIn: state => !!state.access,\n  authStatus: state => state.status,\n}\n})\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}