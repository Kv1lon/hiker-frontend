{"ast":null,"code":"import axios from \"axios\";\nimport Multiselect from \"@vueform/multiselect\";\nimport { useToast } from \"vue-toastification\";\nexport default {\n  name: \"registration\",\n  components: {\n    Multiselect\n  },\n  data: () => ({\n    user: {},\n    username: '',\n    password: '',\n    email: '',\n    bio: '',\n    city: '',\n    cities: [],\n    opt_cities: [],\n    region: '',\n    regions: [],\n    opt_regions: [],\n    msg: [],\n    loading: false,\n    toast: useToast()\n  }),\n  created() {\n    this.loadListCountries();\n    this.loadListRegions();\n  },\n  watch: {\n    email(value) {\n      // binding this to the data value in the email input\n      this.email = value;\n      this.validateEmail(value);\n    },\n    password(value) {\n      this.password = value;\n      this.validatePassword(value);\n    }\n  },\n  methods: {\n    register: function () {\n      const formData = new FormData();\n      if (this.city) {\n        var city = this.cities.find(x => x.title === this.city).slug;\n        formData.append(\"city\", city);\n      }\n      if (this.region) {\n        var region = this.regions.find(x => x.title === this.region).slug;\n        formData.append(\"region\", region);\n      }\n      formData.append(\"username\", this.username);\n      formData.append(\"email\", this.email);\n      formData.append(\"password\", this.password);\n      formData.append(\"bio\", this.bio);\n      this.loading = true;\n      this.$store.dispatch('register', formData).then(() => {\n        this.loading = false;\n        this.toast.success('На Вашу пошту був відправлен лист з підтвердженням');\n        this.$router.push('/');\n      }).catch(err => {\n        this.loading = false, console.log(err), this.toast.error('Схоже відбулась помилка, можливо користувач з таким імям вже існує (' + err + ')');\n      });\n    },\n    async loadListCountries() {\n      axios({\n        url: this.$store.state.backendUrl + `api/v1/city?limit=100&search=`,\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      }).then(response => {\n        this.cities = response.data;\n        for (var el in response.data) {\n          this.opt_cities.push(response.data[el].title);\n        }\n      });\n    },\n    async loadListRegions() {\n      axios({\n        url: this.$store.state.backendUrl + `api/v1/regions`,\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      }).then(response => {\n        this.regions = response.data;\n        for (var el in response.data) {\n          this.opt_regions.push(response.data[el].title);\n        }\n      });\n    },\n    async loadPopularPosts() {\n      axios({\n        url: this.$store.state.backendUrl + `api/v1/blog?limit=3&search=&date=month&popular=descending`,\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      }).then(response => {\n        this.popular = response.data.results;\n      });\n    },\n    validateEmail(value) {\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)) {\n        this.msg['email'] = '';\n      } else {\n        this.msg['email'] = 'Це не схоже на email';\n      }\n    },\n    validatePassword(value) {\n      let difference = 8 - value.length;\n      if (value.length < 8) {\n        this.msg['password'] = 'Повинно бути 8 символів! ' + difference + ' залишилось символів';\n      } else {\n        this.msg['password'] = '';\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}